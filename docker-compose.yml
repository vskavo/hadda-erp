# Docker Compose para desarrollo local
version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: hadda-erp-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hadda_erp
      POSTGRES_USER: hadda_user
      POSTGRES_PASSWORD: hadda_password_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hadda_user -d hadda_erp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AplicaciÃ³n Hadda ERP
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hadda-erp-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Base de datos
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hadda_erp
      DB_USER: hadda_user
      DB_PASSWORD: hadda_password_dev
      DB_SSL: "false"
      
      # Node
      NODE_ENV: production
      PORT: 8080
      
      # JWT
      JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
      
      # Email (SendGrid)
      SENDGRID_API_KEY: "your-sendgrid-api-key"
      EMAIL_FROM: "noreply@hadda-erp.com"
      
      # Base URL
      BASE_URL: "http://localhost:8080"
      
      # Crear usuario admin por defecto
      CREATE_DEFAULT_ADMIN: "true"
      DEFAULT_ADMIN_EMAIL: "admin@hadda-erp.com"
      DEFAULT_ADMIN_PASSWORD: "Admin123!"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

